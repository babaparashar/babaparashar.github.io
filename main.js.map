{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.lazy.routing.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/new-registration/fresher/fresher.component.css","webpack:///./src/app/new-registration/fresher/fresher.component.html","webpack:///./src/app/new-registration/fresher/fresher.component.ts","webpack:///./src/app/new-registration/new-registration.component.css","webpack:///./src/app/new-registration/new-registration.component.html","webpack:///./src/app/new-registration/new-registration.component.ts","webpack:///./src/app/new-registration/professional/professional.component.css","webpack:///./src/app/new-registration/professional/professional.component.html","webpack:///./src/app/new-registration/professional/professional.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\n\nexport class AppComponent {\n  \n\n}\n","import{Routes,RouterModule,PreloadAllModules,NoPreloading} from '@angular/router';\r\n\r\nimport {ModuleWithProviders} from '@angular/core';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport { NewRegistrationComponent } from './new-registration/new-registration.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { FresherComponent } from './new-registration/fresher/fresher.component';\r\nimport { ProfessionalComponent } from './new-registration/professional/professional.component';\r\n\r\nconst APP_LAZY_ROUTE: Routes = [\r\n  {path:\"\",component:LoginComponent},\r\n  {path:\"registration\",component:NewRegistrationComponent},\r\n  {path:\"fresher\",component:FresherComponent},\r\n  {path:\"professional\",component:ProfessionalComponent},\r\n\r\n];\r\n\r\n\r\nexport const APP_LAZY_ROUTING : ModuleWithProviders = RouterModule.forRoot(APP_LAZY_ROUTE, {\r\n  preloadingStrategy: NoPreloading,\r\n});","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule} from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport {APP_LAZY_ROUTING} from './app.lazy.routing';\n\nimport { AppComponent } from './app.component';\nimport { NewRegistrationComponent } from './new-registration/new-registration.component';\nimport { LoginComponent } from './login/login.component';\nimport { FresherComponent } from './new-registration/fresher/fresher.component';\nimport { ProfessionalComponent } from './new-registration/professional/professional.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NewRegistrationComponent,\n    LoginComponent,\n    FresherComponent,\n    ProfessionalComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule, APP_LAZY_ROUTING, RouterModule, ReactiveFormsModule \n  ],\n  exports: [RouterModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h1>{{title}}</h1>\\n\\n<form [formGroup] =\\\"loginForm\\\" class=\\\"form-group\\\" (ngSubmit)=\\\"onSubmit()\\\" required>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"exampleInputEmail1\\\">Email ID/Username</label>\\n    <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\" placeholder=\\\"Enter Email ID/Username\\\" [email]=\\\"validateEmail\\\">\\n    <span class=\\\"ortext\\\" *ngIf=\\\"username\\\" >Please Enter valid credentials</span>\\n    \\t<!-- <small *ngIf=\\\"username.errors?.required\\\" class=\\\"text-danger\\\">Email is required</small> -->\\n  </div>\\n  <div class=\\\"form-group\\\"> \\n    <label for=\\\"exampleInputPassword1\\\">Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" id=\\\"exampleInputPassword1\\\" placeholder=\\\"Enter Password\\\">\\n    \\n  </div>\\n  \\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" rel=\\\"required\\\" (click)= \\\"onSubmit()\\\" >Login</button>\\n \\n  \\n \\n</form>\\n<div class=\\\"orSec\\\"><span class=\\\"ortext\\\">or</span></div>\\n<button class=\\\"btn btn-primary\\\" routerLink=\\\"registration\\\" >Registration Now</button>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, RequiredValidator } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n \n  constructor(private fb: FormBuilder) { }\nloginForm: FormGroup;\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group ({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n      \n    })\n  }\n  onSubmit(){\n    console.log(this.loginForm.value);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\"  >\\n\\t<div *ngIf=\\\"personal\\\">\\n\\t\\t<h2>Personal</h2>\\n\\t\\t<form [formGroup]=\\\"fresherPresonalForm\\\">\\n\\t\\t\\t<div class=\\\"form-group\\\" >\\n\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" placeholder=\\\"Enter your full name\\\" required>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"fresherPresonalForm.controls.name.invalid && fresherPresonalForm.controls.name.touched\\\" >this feild is require</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"emailId\\\" placeholder=\\\"Enter your Active email id to receive relevant jobs\\\" required>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"fresherPresonalForm.controls.emailId.invalid && fresherPresonalForm.controls.emailId.touched\\\" >emailId is invalid</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" placeholder=\\\"Minimum 6 Characters\\\" required>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"fresherPresonalForm.controls.password.invalid && fresherPresonalForm.controls.password.touched\\\" >password is invalid</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"mobileNumber\\\" placeholder=\\\"Where Requiter can contract you\\\" required>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"fresherPresonalForm.controls.mobileNumber.invalid && fresherPresonalForm.controls.mobileNumber.touched\\\" >mobileNumber is invalid</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"currentCity\\\" placeholder=\\\"city name\\\" required>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"fresherPresonalForm.controls.city.invalid && fresherPresonalForm.controls.city.touched\\\" >city name is invalid</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<input type=\\\"file\\\" class=\\\"form-control\\\" formControlName=\\\"resume\\\" placeholder=\\\"upload resume\\\" required>\\n\\t\\t\\t</div>\\n\\t\\t\\t<button class=\\\"btn btn-primary btn-block\\\"  (click)=\\\"registerUser()\\\">Register</button>\\n\\t\\t\\t\\n\\t\\t</form>\\n\\t</div>\\n  <div *ngIf=\\\"education\\\">\\n\\t\\t<h2>Education</h2>\\n\\t\\t<form [formGroup]=\\\"fresherEducationForm\\\">\\n      <div class=\\\"form-group\\\">\\n\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"qualification\\\" placeholder=\\\"qualification\\\" required>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"fresherEducationForm.controls.qualification.invalid && fresherEducationForm.controls.qualification.touched\\\" >this feild is require</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"course\\\" placeholder=\\\"enter course\\\" required>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"fresherEducationForm.controls.course.invalid && fresherEducationForm.controls.course.touched\\\" >this feild is require</small>\\n\\t\\t\\t</div>\\n      <div class=\\\"form-group\\\">\\n\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"specialization\\\" placeholder=\\\"enter specialization\\\"required>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"fresherEducationForm.controls.specialization.invalid && fresherEducationForm.controls.specialization.touched\\\" >this feild is require</small>\\n\\t\\t\\t</div>      \\n      <div class=\\\"form-group\\\">\\n\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"institute\\\" placeholder=\\\"enter university/collage name\\\" required>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"fresherEducationForm.controls.institute.invalid && fresherEducationForm.controls.institute.touched\\\" >this feild is require</small>\\n\\t\\t\\t</div>\\n      <div class=\\\"form-row\\\" >\\n        <select class=\\\"form-control\\\" formControlName=\\\"courceType\\\" >\\n          <option selected=\\\"\\\"value=\\\"\\\" disabled >cource type</option>\\n          <option>Full Time</option>\\n          <option>Part Time</option>\\n          <option>Corresspondence</option>\\n        </select>&nbsp;&nbsp;&nbsp;\\t\\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\t\\t\\t\\t\\n\\t\\t\\t<!-- <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"courceType\\\" placeholder=\\\"courceType\\\" required> -->\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"fresherEducationForm.controls.courceType.invalid && fresherEducationForm.controls.courceType.touched\\\" >this feild is require</small>\\n        <select formControlName=\\\"passingYear\\\" class=\\\"form-control\\\" >\\n              <option disabled=\\\"\\\" value=\\\"\\\" selected=\\\"\\\" aria-multiline=\\\"false\\\">passing year</option>\\n              <option>2020</option>\\n              <option>2019</option>\\n              <option>2018</option>\\n              <option>2017</option>\\n              <option>2016</option>\\n              <option>2015</option>\\n              <option>2014</option>\\n              <option>2013</option>\\n              <option>2012</option>\\n              <option>2011</option>\\n\\t\\t\\t  <option>2010</option>\\n\\t\\t\\t  <option>2009</option>\\n              <option>2008</option>\\n              <option>2007</option>\\n\\t\\t\\t  <option>2006</option>\\n\\t\\t\\t  <option>2005</option>\\n              <option>2004</option>\\n              <option>2003</option>\\n\\t\\t\\t  <option>2002</option>\\n\\t\\t\\t  <option>2001</option>\\n              <option>2000</option>\\n              <option>1999</option>\\n\\t\\t\\t  <option>1998</option>\\n\\t\\t\\t  <option>1997</option>\\n              <option>1996</option>\\n              <option>1995</option>\\n              <option>1994</option>\\n            </select>\\t\\t\\n\\t\\t\\t<!-- <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"passingYear\\\" placeholder=\\\"passingYear\\\" required> -->\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"fresherEducationForm.controls.passingYear.invalid && fresherEducationForm.controls.passingYear.touched\\\" >this feild is require</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-row\\\" >\\n\\t\\t\\t\\t<div class=\\\"col\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"md-form\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"button\\\" class=\\\"form-control\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addSkill()\\\" value=\\\"addSkill\\\">\\n          </div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div formArrayName=\\\"skills\\\"\\n\\t\\t\\t\\t\\t*ngFor=\\\"let skill of fresherEducationForm.controls.skills?.value; let i=index\\\">\\n\\t\\t\\t\\t\\t<div [formGroupName]=\\\"i\\\">\\n\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" formControlName=\\\"skillName\\\" placeholder=\\\"Add New skillName\\\"><br>\\n        </div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<!-- <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"skills\\\" placeholder=\\\"skills\\\"> -->\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary btn-block\\\"[disabled]=\\\"!fresherEducationForm.valid\\\" (click)=\\\"addEducationDetail()\\\">Continue</button>\\n\\t\\t</form>\\n\\t</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators, FormArray } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-fresher',\n  templateUrl: './fresher.component.html',\n  styleUrls: ['./fresher.component.css']\n})\nexport class FresherComponent implements OnInit {\n  personal: boolean;\n  education: boolean;\n\n  constructor(private formBuilder: FormBuilder, private router: Router) {}\n  fresherPresonalForm: FormGroup;\n  fresherEducationForm: FormGroup;\n  ngOnInit() {\n    this.personal = true;\n    this.fresherPresonalForm = this.formBuilder.group({\n      name: [\"\", Validators.required],\n      emailId: [\"\", Validators.compose([Validators.email,Validators.required])],\n      password: [\"\", Validators.compose([Validators.minLength(6),Validators.required])],\n      mobileNumber: [\"\", Validators.compose([Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\"),Validators.required])],\n      currentCity: [\"\", Validators.required],\n      resume: [\"\", Validators.required]\n    });\n    this.fresherEducationForm = this.formBuilder.group({\n      qualification: [\"\", Validators.required],\n      course: [\"\", Validators.required],\n      specialization: [\"\", Validators.required],\n      institute: [\"\", Validators.required],\n      courceType: [\"\", Validators.required],\n      passingYear: [\"\", Validators.required],\n      skills: this.formBuilder.array([])\n    });\n  }\n  addSkill(){\n    const skl=this.fresherEducationForm.controls.skills as FormArray;\n    skl.push(this.formBuilder.group({\n      skillName:\"\"\n    }));\n  }\n  registerUser() {\n    console.log(this.fresherPresonalForm.controls);\n    this.personal = false;\n    this.education = true;\n  }\n  addEducationDetail(){\n    console.log(this.fresherEducationForm.controls);\n  }\n}\n\n    \n\n","module.exports = \"\"","module.exports = \"\\n  <button type=\\\"button\\\" class=\\\"action-btn fresh\\\" title=\\\"I am a Fresher\\\" routerLink=\\\"/fresher\\\">I am a Fresher</button>\\n  <p class=\\\"description\\\">I have just graduated/I haven't worked after graduation</p>\\n  <button type=\\\"button\\\"  class=\\\"action-btn exp\\\" title=\\\"I am a Professional\\\" routerLink=\\\"/professional\\\">I am a Professional</button>\\n  <p class=\\\"description\\\">I have at least 1 month of work experience</p>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router ,ActivatedRoute,Params} from '@angular/router';\n\n@Component({\n  selector: 'app-new-registration',\n  templateUrl: './new-registration.component.html',\n  styleUrls: ['./new-registration.component.css']\n})\nexport class NewRegistrationComponent implements OnInit {\n\n  constructor( private activatedRoute:ActivatedRoute, private router:Router) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" >\\n\\t<div *ngIf=\\\"personal\\\">\\n\\t\\t<h2>Personal </h2>\\n\\t\\t<form [formGroup]=\\\"professionalUserRegistrationForm\\\">\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"userName\\\" placeholder=\\\"enter full name\\\" required>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"professionalUserRegistrationForm.controls.userName.invalid && professionalUserRegistrationForm.controls.userName.touched\\\" >this feild is require</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"emailId\\\" placeholder=\\\"enter emailid\\\" required>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"professionalUserRegistrationForm.controls.emailId.invalid && professionalUserRegistrationForm.controls.emailId.touched\\\" >emailId is invalid</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" placeholder=\\\"enter password\\\" required>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"professionalUserRegistrationForm.controls.password.invalid && professionalUserRegistrationForm.controls.password.touched\\\" >password is invalid</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"mobileNumber\\\" placeholder=\\\"enter mobile number\\\" required>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"professionalUserRegistrationForm.controls.mobileNumber.invalid && professionalUserRegistrationForm.controls.mobileNumber.touched\\\" >mobileNumber is invalid</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<label>Total work Experience</label>\\n\\t\\t\\t<div class=\\\"form-row\\\" >\\n\\t\\t\\t\\t<select formControlName=\\\"yearExperience\\\" class=\\\"form-control\\\" >\\n              <option disabled=\\\"\\\" value=\\\"\\\" selected=\\\"\\\" aria-multiline=\\\"false\\\">select</option>\\n              <option>0</option>\\n              <option>1</option>\\n              <option>2</option>\\n              <option>3</option>\\n              <option>4</option>\\n              <option>5</option>\\n              <option>5+</option>\\n              <option>10+</option>\\n              <option>15+</option>\\n              <option>20+</option>\\n              <option>25+</option>\\n              <option>30+</option>\\n            </select>\\n\\t\\t\\t\\t<label>Year(s)</label>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"professionalUserRegistrationForm.controls.yearExperience.invalid && professionalUserRegistrationForm.controls.yearExperience.touched\\\" >Input is invalid</small>\\n\\t\\t\\t\\t<select formControlName=\\\"monthExperience\\\" class=\\\"form-control\\\" style=\\\"width:6cm;\\\">\\n              <option disabled=\\\"\\\"  value=\\\"\\\"selected=\\\"\\\" aria-multiline=\\\"false\\\">select</option>\\n              <option>0</option>\\n              <option>1</option>\\n              <option>2</option>\\n              <option>3</option>\\n              <option>4</option>\\n              <option>5</option>\\n              <option>6</option>\\n              <option>7</option>\\n              <option>8</option>\\n              <option>9</option>\\n              <option>10</option>\\n              <option>11</option>\\n            </select>\\n\\t\\t\\t\\t<label>Month(s)</label>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"professionalUserRegistrationForm.controls.monthExperience.invalid && professionalUserRegistrationForm.controls.monthExperience.touched\\\" >Input is invalid</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group\\\" style=\\\"margin-top:1em;\\\">\\n\\t\\t\\t\\t<input type=\\\"file\\\" class=\\\"form-control\\\" formControlName=\\\"resume\\\" placeholder=\\\"upload resume\\\" required>\\n\\t\\t\\t</div>\\n\\t\\t\\t<button class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"!professionalUserRegistrationForm.valid\\\" (click)=\\\"registerUser()\\\">Register</button>\\n\\t\\t</form>\\n\\t</div>\\n\\t\\n\\t<div *ngIf=\\\"employment\\\">\\n\\t\\t<h2>Employment</h2>\\n\\t\\t<form [formGroup]=\\\"employmentForm\\\">\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"designation\\\" placeholder=\\\"qualification\\\" required>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"employmentForm.controls.designation.invalid && employmentForm.controls.designation.touched\\\" >this feild is require</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"companyName\\\" placeholder=\\\"enter course\\\" required>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"employmentForm.controls.companyName.invalid && employmentForm.controls.companyName.touched\\\" >this feild is require</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<label>Annual Salary</label>\\n\\t\\t\\t<div class=\\\"form-row\\\" style=\\\"margin-top: 0.5em;\\\">\\n\\t\\t\\t\\t<select formControlName=\\\"salaryLakhs\\\" class=\\\"form-control\\\" style=\\\"width:6cm;\\\">\\n              <option disabled=\\\"\\\" value=\\\"\\\" selected=\\\"\\\" aria-multiline=\\\"false\\\">select</option>\\n              <option>0</option>\\n              <option>1</option>\\n              <option>2</option>\\n              <option>3</option>\\n              <option>4</option>\\n              <option>5</option>\\n              <option>5+</option>\\n              <option>10+</option>\\n              <option>15+</option>\\n              <option>20+</option>\\n              <option>25+</option>\\n              <option>30+</option>\\n            </select>&nbsp;&nbsp;&nbsp;\\n\\t\\t\\t\\t<label>Lakhs</label>&nbsp;&nbsp;&nbsp;&nbsp;\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"employmentForm.controls.salaryLakhs.invalid && employmentForm.controls.salaryLakhs.touched\\\" >Input is invalid</small>\\n\\t\\t\\t\\t<select formControlName=\\\"salaryThousands\\\" class=\\\"form-control\\\" style=\\\"width:6cm;\\\">\\n              <option disabled=\\\"\\\" value=\\\"\\\" selected=\\\"\\\" aria-multiline=\\\"false\\\">select</option>\\n              <option>5+</option>\\n              <option>15+</option>\\n              <option>20+</option>\\n              <option>25+</option>\\n              <option>30+</option>\\n              <option>35+</option>\\n              <option>40+</option>\\n              <option>45+</option>\\n              <option>50+</option>\\n              <option>55+</option>\\n              <option>60+</option>\\n              <option>65+</option>\\n              <option>70+</option>\\n              <option>75+</option>\\n              <option>80+</option>\\n              <option>85+</option>\\n              <option>90+</option>\\n              <option>95+</option>\\n            </select>&nbsp;&nbsp;&nbsp;&nbsp;\\n\\t\\t\\t\\t<label>Thousands</label>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"employmentForm.controls.salaryThousands.invalid && employmentForm.controls.salaryThousands.touched\\\" >Input is invalid</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<label>Working Since</label>\\n\\t\\t\\t<div class=\\\"form-row\\\" style=\\\"margin-top: 0.5em;\\\">\\n\\t\\t\\t\\t<select formControlName=\\\"startYear\\\" class=\\\"form-control\\\" style=\\\"width:4cm;\\\">\\n              <option disabled=\\\"\\\" value=\\\"\\\" selected=\\\"\\\" aria-multiline=\\\"false\\\">year</option>\\n              <option>2020</option>\\n              <option>2019</option>\\n              <option>2018</option>\\n              <option>2017</option>\\n              <option>2016</option>\\n              <option>2015</option>\\n              <option>2014</option>\\n              <option>2013</option>\\n              <option>2012</option>\\n              <option>2011</option>\\n              <option>2010</option>\\n            </select>&nbsp;&nbsp;&nbsp;\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"employmentForm.controls.startYear.invalid && employmentForm.controls.startYear.touched\\\" >Input is invalid</small>\\n\\t\\t\\t\\t<select formControlName=\\\"startMonth\\\" class=\\\"form-control\\\" style=\\\"width:4cm;\\\">\\n              <option disabled=\\\"\\\" value=\\\"\\\" selected=\\\"\\\" aria-multiline=\\\"false\\\">month</option>\\n              <option>January</option>\\n              <option>February</option>\\n              <option>March</option>\\n              <option>April</option>\\n              <option>May</option>\\n              <option>June</option>\\n              <option>July</option>\\n              <option>August</option>\\n              <option>September</option>\\n              <option>October</option>\\n              <option>Navember</option>\\n              <option>December</option>\\n            </select>&nbsp;&nbsp;&nbsp;&nbsp;\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"employmentForm.controls.startMonth.invalid && employmentForm.controls.startMonth.touched\\\" >Input is invalid</small>\\n\\t\\t\\t\\t<label> To</label>&nbsp;&nbsp;&nbsp;\\n\\t\\t\\t\\t<select formControlName=\\\"endYear\\\" class=\\\"form-control\\\" style=\\\"width:4cm;\\\">\\n              <option disabled=\\\"\\\" value=\\\"\\\" selected=\\\"\\\" aria-multiline=\\\"false\\\">year</option>\\n              <option>2020</option>\\n              <option>2019</option>\\n              <option>2018</option>\\n              <option>2017</option>\\n              <option>2016</option>\\n              <option>2015</option>\\n              <option>2014</option>\\n              <option>2013</option>\\n              <option>2012</option>\\n              <option>2011</option>\\n              <option>2010</option>\\n            </select>&nbsp;&nbsp;&nbsp;\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"employmentForm.controls.endYear.invalid && employmentForm.controls.endYear.touched\\\" >Input is invalid</small>\\n\\t\\t\\t\\t<select formControlName=\\\"endMonth\\\" class=\\\"form-control\\\" style=\\\"width:4cm;\\\">\\n              <option disabled=\\\"\\\" value=\\\"\\\" selected=\\\"\\\" aria-multiline=\\\"false\\\">month</option>\\n              <option>January</option>\\n              <option>February</option>\\n              <option>March</option>\\n              <option>April</option>\\n              <option>May</option>\\n              <option>June</option>\\n              <option>July</option>\\n              <option>August</option>\\n              <option>September</option>\\n              <option>October</option>\\n              <option>Navember</option>\\n              <option>December</option>\\n            </select>&nbsp;&nbsp;&nbsp;&nbsp;\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"employmentForm.controls.endMonth.invalid && employmentForm.controls.endMonth.touched\\\" >Input is invalid</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group\\\" style=\\\"margin-top:1em;\\\">\\n\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"city\\\" placeholder=\\\"city name\\\" required>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"employmentForm.controls.city.invalid && employmentForm.controls.city.touched\\\" >Input is invalid</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<select class=\\\"form-control\\\" formControlName=\\\"noticePeriod\\\">\\n          <option disabled value=\\\"\\\" selected=\\\"\\\">select duration of notice period</option>\\n          <option>15 days or less</option>\\n          <option>1 Month</option>\\n          <option>2 Months</option>\\n          <option>3 Months</option>\\n          <option> More than 3 Months</option>\\n        </select>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-row\\\" style=\\\"margin-top: 1em;\\\">\\n\\t\\t\\t\\t<div class=\\\"col\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"md-form\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"button\\\" class=\\\"form-control\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addSkill()\\\" value=\\\"addSkill\\\">\\n          </div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div formArrayName=\\\"skills\\\"\\n\\t\\t\\t\\t\\t*ngFor=\\\"let skill of employmentForm.controls.skills?.value; let i=index\\\">\\n\\t\\t\\t\\t\\t<div [formGroupName]=\\\"i\\\">\\n\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" formControlName=\\\"skillName\\\" placeholder=\\\"Add New skill\\\"><br>\\n        </div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" formControlName=\\\"industry\\\">\\n          <option disabled  value=\\\"\\\"selected=\\\"\\\">industry</option>\\n          <option>Accounting/Finance</option>\\n          <option>Animation</option>\\n          <option>Banking</option>\\n          <option>Construction/Engineering</option>\\n          <option>Export/Import</option>\\n          <option>Insurance</option>\\n          <option>IT-Hardware & Networking</option>\\n          <option>IT-Software/Software Services</option>\\n          <option>Medical Devices/Equipments</option>\\n          <option>Mining</option>\\n        </select>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" formControlName=\\\"functionalArea\\\">\\n          <option disabled  value=\\\"\\\"selected=\\\"\\\">functionalArea</option>\\n          <option>Accounts/Finance/Tax/CS</option>\\n          <option>Agent</option>\\n          <option>Banking/Insurance</option>\\n          <option>Architecture</option>\\n          <option>Engineering Design/R&D</option>\\n          <option>Technical Staff/Support</option>\\n          <option>IT Software-Client Server</option>\\n          <option>IT Software-DBA</option>\\n          <option>IT Software-ECommerce</option>\\n          <option>IT Software-Embedded</option>\\n          <option>IT Software-Middelware</option>\\n          <option>IT Software-Mobile</option>\\n        </select>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" formControlName=\\\"role\\\">\\n          <option disabled value=\\\"\\\" selected=\\\"\\\">role</option>\\n          <option>Software Developer</option>\\n          <option>Team Lead/Tech Lead</option>\\n          <option>System Analyst</option>\\n          <option>Tech Architect</option>\\n          <option>Database Architect/Designer</option>\\n          <option>DBA</option>\\n          <option>Network Admin</option>\\n          <option>System Admin</option>\\n          <option>Business Analyst</option>\\n          <option>QA</option>\\n        </select>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary btn-block\\\"[disabled]=\\\"!employmentForm.valid\\\" (click)=\\\"addEmploymentDetail()\\\">Continue</button>\\n\\t\\t</form>\\n\\t</div>\\n\\n\\t<div *ngIf=\\\"education\\\">\\n\\t\\t<h2>Education</h2>\\n\\t\\t<form [formGroup]=\\\"educationForm\\\">\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<select class=\\\"form-control\\\" formControlName=\\\"qualification\\\">\\n          <option disabled value=\\\"\\\"selected=\\\"\\\">Highest Qualification</option>\\n          <option>Doctrate/PhD</option>\\n          <option>Masters/Post-Graduation</option>\\n          <option>Graduation/Diploma</option>\\n          <option>12th</option>\\n          <option>10th</option>\\n        </select>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"educationForm.controls.qualification.invalid && educationForm.controls.qualification.touched\\\" >this feild is require</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<select class=\\\"form-control\\\" formControlName=\\\"course\\\">\\n          <option disabled value=\\\"\\\" selected=\\\"\\\">cource</option>\\n          <option>CA</option>\\n          <option>CS</option>\\n          <option>M.A.</option>\\n          <option>M.Com</option>\\n          <option>M.Ed</option>\\n          <option>M.Tech</option>\\n          <option>B.Tech/B.E.</option>\\n          <option>B.Com</option>\\n          <option>B.Ed</option>\\n          <option>Other</option>\\n        </select>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"educationForm.controls.course.invalid && educationForm.controls.course.touched\\\" >this feild is require</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<select class=\\\"form-control\\\" formControlName=\\\"specialization\\\">\\n          <option disabled value=\\\"\\\" selected=\\\"\\\">specialization</option>\\n          <option>Anatomy</option>\\n          <option>Ayurveda</option>\\n          <option>Cardiology</option>\\n          <option>Mechanical</option>\\n          <option>Computers</option>\\n          <option>Civil</option>\\n          <option>Electrical</option>\\n          <option>Other</option>\\n        </select>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"educationForm.controls.specialization.invalid && educationForm.controls.specialization.touched\\\" >this feild is require</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"institute\\\" placeholder=\\\" university/collage name\\\" required>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"educationForm.controls.institute.invalid && educationForm.controls.institute.touched\\\" >this feild is require</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<select class=\\\"form-control\\\" formControlName=\\\"courceType\\\">\\n          <option selected=\\\"\\\"value=\\\"\\\" disabled >select type</option>\\n          <option>Full Time</option>\\n          <option>Part Time</option>\\n          <option>Corresspondence</option>\\n        </select>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"employmentForm.controls.courceType.invalid && employmentForm.controls.courceType.touched\\\" >this feild is require</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"passingYear\\\" placeholder=\\\"passingYear\\\" required>\\n\\t\\t\\t\\t<small class=\\\"form-text text-danger\\\" *ngIf=\\\"educationForm.controls.passingYear.invalid && educationForm.controls.passingYear.touched\\\" >this feild is require</small>\\n\\t\\t\\t</div>\\n\\t\\t\\t<button class=\\\"btn btn-primary btn-block\\\"[disabled]=\\\"!employmentForm.valid\\\" (click)=\\\"addEducationDetail()\\\">Continue</button>\\n\\t\\t</form>\\n\\t</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder,FormGroup,Validators,FormArray} from '@angular/forms';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-professional',\n  templateUrl: './professional.component.html',\n  styleUrls: ['./professional.component.css']\n})\nexport class ProfessionalComponent implements OnInit {\n  personal:boolean;\n  education:boolean;\n  employment:boolean;\n    constructor(private formBuilder:FormBuilder,private router:Router) { }\n  professionalUserRegistrationForm:FormGroup;\n  educationForm:FormGroup;\n  employmentForm:FormGroup;\n    ngOnInit() {\n      this.personal=true;\n      this.professionalUserRegistrationForm=this.formBuilder.group({\n        userName:[\"\",Validators.required],\n        emailId:[\"\",Validators.required],\n        password:[\"\",Validators.required],\n        mobileNumber:[\"\",Validators.required],\n        yearExperience:[\"\",Validators.required],\n        monthExperience:[\"\",Validators.required],\n        resume:[\"\",Validators.required]\n      });\n  this.employmentForm=this.formBuilder.group({\n    designation:[\"\",Validators.required],\n    companyName:[\"\",Validators.required],\n    salaryLakhs:[\"\",Validators.required],\n    salaryThousands:[\"\",Validators.required],\n    startYear:[\"\",Validators.required],\n    startMonth:[\"\",Validators.required],\n    endYear:[\"\",Validators.required],\n    endMonth:[\"\",Validators.required],\n    city:[\"\",Validators.required],\n    noticePeriod:[\"\",Validators.required],\n  skills:this.formBuilder.array([]),\n    industry:[\"\",Validators.required],\n    functionalArea:[\"\",Validators.required],\n    role:[\"\",Validators.required]\n  });\n  this.educationForm=this.formBuilder.group({\n  qualification:[\"\",Validators.required],\n  cource:[\"\",Validators.required],\n  specialization:[\"\",Validators.required],\n  institute:[\"\",Validators.required],\n  courceType:[\"\",Validators.required],\n  passingYear:[\"\",Validators.required]\n  });\n    }\n    addSkill(){\n      const skl=this.employmentForm.controls.skills as FormArray;\n      skl.push(this.formBuilder.group({\n        skillName:\"\"\n      }));\n    }\n  registerUser(){\n    alert(\"personal information added successfully!\");\n    console.log(this.professionalUserRegistrationForm.controls);\n    this.personal=false;\n    this.employment=true;\n    this.education=false;\n  }\n  addEmploymentDetail(){\n    alert(\"employmetn detail added successfully!!\");\n    this.personal=false;\n    this.employment=false;\n    this.education=true;\n  }\n  addEducationDetail(){\n  alert(\"education detail added successfully!\");\n  }\n  \n  }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}